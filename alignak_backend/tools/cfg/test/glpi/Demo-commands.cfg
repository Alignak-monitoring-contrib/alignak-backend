# Generated by plugin monitoring for GLPI
# on 2016-01-28 13:13:09

# Simple tcp port check
define command{
 command_name                        pm-check_tcp
 command_line                        $PLUGINSDIR$/check_tcp  -H $HOSTADDRESS$ -p $ARG1$
}


# Simple web check
define command{
 command_name                        pm-check_http
 command_line                        $PLUGINSDIR$/check_http -H $HOSTADDRESS$
}


# Simple web check with SSL
define command{
 command_name                        pm-check_https
 command_line                        $PLUGINSDIR$/check_http -H $HOSTADDRESS$ -S
}


# Check a DNS entry
define command{
 command_name                        pm-check_dig
 command_line                        $PLUGINSDIR$/check_dig -H $HOSTADDRESS$ -l $ARG1$
}


# Check a FTP service
define command{
 command_name                        pm-check_ftp
 command_line                        $PLUGINSDIR$/check_ftp -H $HOSTADDRESS$
}


# Ask a nrpe agent
define command{
 command_name                        pm-check_nrpe
 command_line                        $PLUGINSDIR$/check_nrpe -H $HOSTADDRESS$ -t 9 -u -c $ARG1$
 module_type                         nrpe_poller
}


# Simple ping command
define command{
 command_name                        pm-check_ping
 command_line                        $PLUGINSDIR$/check_ping -H $HOSTADDRESS$ -w 3000,100% -c 5000,100% -p 1
}


# Look at good ssh launch
define command{
 command_name                        pm-check_ssh
 command_line                        $PLUGINSDIR$/check_ssh -H $HOSTADDRESS$
}


# Look for good SMTP connexion
define command{
 command_name                        pm-check_smtp
 command_line                        $PLUGINSDIR$/check_smtp -H $HOSTADDRESS$
}


# Look for good SMTPS connexion
define command{
 command_name                        pm-check_smtps
 command_line                        $PLUGINSDIR$/check_smtp -H $HOSTADDRESS$ -S
}


# Look at a SSL certificate
define command{
 command_name                        pm-check_https_certificate
 command_line                        $PLUGINSDIR$/check_http -H $HOSTADDRESS$ -C 30
}


# Look at an HP printer state
define command{
 command_name                        pm-check_hpjd
 command_line                        $PLUGINSDIR$/check_hpjd -H $HOSTADDRESS$ -C $SNMPCOMMUNITYREAD$
}


# Look at Oracle connexion
define command{
 command_name                        pm-check_oracle_listener
 command_line                        $PLUGINSDIR$/check_oracle --tns $HOSTADDRESS$
}


# Look at MSSQL connexion
define command{
 command_name                        pm-check_mssql_connexion
 command_line                        $PLUGINSDIR$/check_mssql_health --hostname $HOSTADDRESS$ --username "$MSSQLUSER$" --password "$MSSQLPASSWORD$" --mode connection-time
}


# Ldap query
define command{
 command_name                        pm-check_ldap
 command_line                        $PLUGINSDIR$/check_ldap -H $HOSTADDRESS$ -b "$LDAPBASE$" -D $DOMAINUSER$ -P "$DOMAINPASSWORD$"
}


# Ldaps query
define command{
 command_name                        pm-check_ldaps
 command_line                        $PLUGINSDIR$/check_ldaps -H $HOSTADDRESS$ -b "$LDAPBASE$" -D $DOMAINUSER$ -P "$DOMAINPASSWORD$"
}


# Distant mysql check
define command{
 command_name                        pm-check_mysql_connexion
 command_line                        $PLUGINSDIR$/check_mysql -H $HOSTADDRESS$ -u $MYSQLUSER$ -p $MYSQLPASSWORD$
}


# ESX hosts checks
define command{
 command_name                        pm-check_esx_host
 command_line                        $PLUGINSDIR$/check_esx3.pl -D $VCENTER$ -H $HOSTADDRESS$ -u $VCENTERLOGIN$ -p $VCENTERPASSWORD$ l $ARG1$
}


# ESX VM checks
define command{
 command_name                        pm-check_esx_vm
 command_line                        $PLUGINSDIR$/check_esx3.pl -D $VCENTER$ -N $HOSTALIAS$ -u $VCENTERLOGIN$ -p $VCENTERLOGIN$ -l $ARG1$
}


# Check Linux host alive
define command{
 command_name                        pm-check_linux_host_alive
 command_line                        $PLUGINSDIR$/check_tcp -H $HOSTADDRESS$ -p 22 -t 3
}


# Check host alive
define command{
 command_name                        pm-check_host_alive
 command_line                        $PLUGINSDIR$/check_ping -H $HOSTADDRESS$ -w 1,50% -c 2,70% -p 1
}


# Check Windows host alive
define command{
 command_name                        pm-check_windows_host_alive
 command_line                        $PLUGINSDIR$/check_tcp -H $HOSTADDRESS$ -p 139 -t 3
}


# Check disk
define command{
 command_name                        pm-check_disk
 command_line                        $PLUGINSDIR$/check_disk -w $ARG1$ -c $ARG2$ -p $ARG3$
}


# Check local disk
define command{
 command_name                        pm-check-host-alive
 command_line                        $PLUGINSDIR$/check.sh $HOSTADDRESS$ -c $ARG1$ SERVICE $USER1$
}


# Check local cpu
define command{
 command_name                        pm-check_cpu_usage
 command_line                        $PLUGINSDIR$/check_cpu_usage -w $ARG1$ -c $ARG2$
}


# Check load
define command{
 command_name                        pm-check_load
 command_line                        $PLUGINSDIR$/check_load -r -w $ARG1$ -c $ARG2$
}


# Check snmp
define command{
 command_name                        pm-check_snmp
 command_line                        $PLUGINSDIR$/check_snmp -H $HOSTADDRESS$ -P $ARG1$ -C $ARG2$ -o $ARG3$,$ARG4$,$ARG5$,$ARG6$,$ARG7$,$ARG8$,$ARG9$,$ARG10$
}


# Check users connected
define command{
 command_name                        pm-check_users
 command_line                        $PLUGINSDIR$/check_users -w $ARG1$ -c $ARG2$
}


# Dummy check
define command{
 command_name                        pm-check_dummy
 command_line                        $NAGIOSPLUGINSDIR$/check_dummy $ARG1$ "$ARG2$"
}


# nsca_host_check
define command{
 command_name                        pm-nsca_host_check
 command_line                        $NAGIOSPLUGINSDIR$/check_dummy 2 "Host is not alive"
}


# nsca_network_check
define command{
 command_name                        pm-nsca_network_check
 command_line                        $NAGIOSPLUGINSDIR$/$/check_dummy 2 "No data for network"
}


# nsca_printer_check
define command{
 command_name                        pm-nsca_printer_check
 command_line                        $NAGIOSPLUGINSDIR$/$/check_dummy 2 "No data for printer"
}


# RedÃ©marrage
define command{
 command_name                        pm-host_action
 command_line                        restart_host
}


# Shinken restart
define command{
 command_name                        restart-shinken
 command_line                        nohup sh -c '/etc/init.d/shinken restart' > /dev/null 2>&1 &
}


# Shinken reload
define command{
 command_name                        reload-shinken
 command_line                        nohup sh -c '/etc/init.d/shinken reload' > /dev/null 2>&1 &
}


# Service : notify by mail (perl)
define command{
 command_name                        pm-notify-service-by-email-perl
 command_line                        $PLUGINSDIR$/sendmailservices.pl "$NOTIFICATIONTYPE$" "$SERVICEDESC$" "$HOSTALIAS$" "$HOSTADDRESS$" "$SERVICESTATE$" "$SHORTDATETIME$" "$SERVICEOUTPUT$" "$CONTACTEMAIL$" "$SERVICENOTESURL$"
}


# Service : notify by mail (python)
define command{
 command_name                        pm-notify-service-by-email-py
 command_line                        $PLUGINSDIR$/sendmailservice.py -s "$SERVICEDESC$" -n "$SERVICESTATE$" -H "$HOSTALIAS$" -a "$HOSTADDRESS$" -i "$SHORTDATETIME$" -o "$SERVICEOUTPUT$" -t "$CONTACTEMAIL$" -r "$SERVICESTATE$"
}


# Host : notify by mail (html)
define command{
 command_name                        pm-nagios_send_host_mail
 command_line                        $PLUGINSDIR$/pnp4n_send_host_mail.pl -l fr -f multi -p IPM
}


# Service : notify by mail (html)
define command{
 command_name                        pm-nagios_send_service_mail
 command_line                        $PLUGINSDIR$/pnp4n_send_service_mail.pl -l fr -f multi -p IPM
}


# Host : notify by mail (basic)
define command{
 command_name                        pm-notify-host-by-email-basic
 command_line                        /usr/bin/printf "%b" "Shinken Notification\n\nType:$NOTIFICATIONTYPE$\nHost: $HOSTNAME$\nState: $HOSTSTATE$\nAddress: $HOSTADDRESS$\nInfo: $HOSTOUTPUT$\nDate/Time: $DATE$ $TIME$\n" | /usr/bin/mail -s "Host $HOSTSTATE$ alert for $HOSTNAME$" $CONTACTEMAIL$
}


# Service : notify by email (basic)
define command{
 command_name                        pm-notify-service-by-email
 command_line                        /usr/bin/printf "%b" "Shinken Notification\n\nNotification Type: $NOTIFICATIONTYPE$\n\nService: $SERVICEDESC$\nHost: $HOSTNAME$\nAddress: $HOSTADDRESS$\nState: $SERVICESTATE$\n\nDate/Time: $DATE$ $TIME$\nAdditional Info : $SERVICEOUTPUT$\n" | /usr/bin/mail -s "** $NOTIFICATIONTYPE$ alert - $HOSTNAME$/$SERVICEDESC$ is $SERVICESTATE$ **" $CONTACTEMAIL$
}


# Host : notify by mail (PHP)
define command{
 command_name                        pm-notify-host-by-email-php
 command_line                        /usr/bin/php -q $PLUGINSDIR$/nagios_mail.php
}


# Service : notify by mail (php)
define command{
 command_name                        pm-notify-service-by-email-php
 command_line                        /usr/bin/php -q $PLUGINSDIR$/nagios_mail.php
}


# Host : notify by XMPP
define command{
 command_name                        pm-notify-host-by-xmpp
 command_line                        $PLUGINSDIR$/notify_by_xmpp.py -a $PLUGINSDIR$/notify_by_xmpp.ini "Host '$HOSTNAME$' is $HOSTSTATE$ - Info : $HOSTOUTPUT$" frederic.mohier@jappix.com
}


# Service : notify by XMPP
define command{
 command_name                        pm-notify-service-by-xmpp
 command_line                        $PLUGINSDIR$/notify_by_xmpp.py -a $PLUGINSDIR$/notify_by_xmpp.ini "$NOTIFICATIONTYPE$ $HOSTNAME$ $SERVICEDESC$ $SERVICESTATE$ $SERVICEOUTPUT$ $LONGDATETIME$" frederic.mohier@jappix.com
}


# Notification Slack - host
define command{
 command_name                        pm-notify-host-by-slack
 command_line                        $PLUGINSDIR$/notify_by_slack.py -n host -c "$NOTIFICATIONTYPE$,,$HOSTNAME$,,$HOSTADDRESS$,,$LONGDATETIME$" -o "$HOSTSTATE$,,$HOSTDURATION$" -w -u "http://shinkenmain:7767" -K "xoxp-18492972628-18498603810-19346398978-b7ce8a2e6a" -T "Shinken-test" -F "shinken-test"
}


# Notification Slack - service
define command{
 command_name                        pm-notify-service-by-slack
 command_line                        $PLUGINSDIR$/notify_by_slack.py -n service -c "$NOTIFICATIONTYPE$,,$HOSTNAME$,,$HOSTADDRESS$,,$LONGDATETIME$" -o "$SERVICEDESC$,,$SERVICESTATE$,,$SERVICEOUTPUT$,,$SERVICEDURATION$" -w -u "http://shinkenmain:7767" -K "xoxp-18492972628-18498603810-19346398978-b7ce8a2e6a" -T "Shinken-test" -F "shinken-test"
}


# Restart Shinken (1.4)
define command{
 command_name                        restart_shinken
 command_line                        nohup sh -c '/usr/local/shinken/bin/stop_arbiter.sh && sleep 3 && /usr/local/shinken/bin/launch_arbiter.sh'  > /dev/null 2>&1 &
}


