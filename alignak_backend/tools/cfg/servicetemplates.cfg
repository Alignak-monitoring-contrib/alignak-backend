# Contact definition
# By default the contact will ask notification by mails
define contact{
        name                            generic-contact
	host_notifications_enabled	1
	service_notifications_enabled	1
	email				shinken@localhost
	can_submit_commands		1
	notificationways        	email
        register                        0
	}
# Generic host definition template - This is NOT a real host, just a template!
# Most hosts should inherit from this one
define host{
	name				generic-host

	# Checking part
	check_command			check_host_alive
	max_check_attempts		2
	check_interval			5

	# Check every time
	active_checks_enabled		1
	check_period			24x7

	# Notification part
	# One notification each day (1440 = 60min* 24h)
	# every time, and for all 'errors'
	# notify the admins contactgroups by default
	contact_groups			admins,users
	notification_interval		1440
	notification_period		24x7
	notification_options		d,u,r,f
	notifications_enabled		1

	# Advanced option. Look at the wiki for more informations
	event_handler_enabled		0
	flap_detection_enabled		1
	process_perf_data		1

	# Maintenance period
	#maintenance_period		workhours

	# Dispatching
	#poller_tag			 DMZ
	#realm				 All

	# For the WebUI
	#icon_set			 server ; can be database, disk, network_service, server

	# This said that it's a template
	register			0
}

define service {
   name       srv-pnp
   action_url /pnp4nagios/index.php/graph?host=$HOSTNAME$&srv=$SERVICEDESC$' class='tips' rel='/pnp4nagios/index.php/popup?host=$HOSTNAME$&srv=$SERVICEDESC$
   register   0
}
##############################################################################
##############################################################################
#                                                                            
# Different Time Check Interval Services
#                                                                            
##############################################################################
##############################################################################

##############################################################################
# Purpose of time templates :
# Simply define checks behavior of services with time template to avoid
# false alerts.
# There are three time template type : short, medium, long
# - short means that it will be no retry check for service to be in hard state
# - medium let a time period in soft state for service that can have peak load
# - long let a greater time period in soft state, meant to service where
# great variation and long charge time period are usual.
##############################################################################

# Check every 5min with immediate hard state
define service{
        name                            5min_short
        use                             generic-service
        max_check_attempts              1
        normal_check_interval           5
        retry_interval                  2
        register                        0
}

# Check every 5min with hard state 3min after first non-OK detection
define service{
        name                            5min_medium
        use                             generic-service
        max_check_attempts              2
        normal_check_interval           5
        retry_interval                  3
        register                        0
}

# Check every 5min with hard state after 30min
define service{
        name                            5min_long
        use                             generic-service
        max_check_attempts              6
        normal_check_interval           5
        retry_interval                  5
        register                        0
}

# Check every 10min with immediate hard state
define service{
        name                            10min_short
        use                             generic-service
        max_check_attempts              1
        normal_check_interval           10
        retry_interval                  5
        register                        0
}

# Check every 10min with hard state 10min after first non-OK detection
define service{
        name                            10min_medium
        use                             generic-service
        max_check_attempts              2
        normal_check_interval           10
        retry_interval                  10
        register                        0
}

# Check every 10min with hard state after 1hour
define service{
        name                            10min_long
        use                             generic-service
        max_check_attempts              6
        normal_check_interval           10
        retry_interval                  10
        register                        0
}

# Check every 20min with immediate hard state
define service{
        name                            20min_short
        use                             generic-service
        max_check_attempts              1
        normal_check_interval           20 
        retry_interval                  1
        register                        0
}

# Check every 20min with hard state 20min after first non-OK detection
define service{
        name                            20min_medium
        use                             generic-service
        max_check_attempts              2
        normal_check_interval           20 
        retry_interval                  20
        register                        0
}

# Check every 20min with hard state after 2hours
define service{
        name                            20min_long
        use                             generic-service
        max_check_attempts              6
        normal_check_interval           20 
        retry_interval                  20
        register                        0
}

# Check every 30min with immediate hard state
define service{
        name                            30min_short
        use                             generic-service
        max_check_attempts              1
        normal_check_interval           30
        retry_interval                  15
        register                        0
}

# Check every 30min with hard state 30min after first non-OK detection
define service{
        name                            30min_medium
        use                             generic-service
        max_check_attempts              2
        normal_check_interval           30
        retry_interval                  30
        register                        0
}

# Check every 30min with hard state after 6hours
define service{
        name                            30min_long
        use                             generic-service
        max_check_attempts              6
        normal_check_interval           30
        retry_interval                  30
        register                        0
}

# Check every 1hour with immediate hard state
define service{
        name                            1hour_short
        use                             generic-service
        max_check_attempts              1
        normal_check_interval           60
        retry_interval                  20
        register                        0

}

# Check every 1hour with hard state 1hour after first non-OK detection
define service{
        name                            1hour_medium
        use                             generic-service
        max_check_attempts              2
        normal_check_interval           60
        retry_interval                  60
        register                        0

}

# Check every 1hour with hard state after 6hours
define service{
        name                            1hour_long
        use                             generic-service
        max_check_attempts              6
        normal_check_interval           60
        retry_interval                  60
        register                        0

}

# Check every 12hours with immediate hard state
define service{
        name                            12hours_short
        use                             generic-service
        max_check_attempts              1
        normal_check_interval           720
        retry_interval                  360
        register                        0
}

# Check every 12hours with hard state 12hours after first non-OK detection
define service{
        name                            12hours_medium
        use                             generic-service
        max_check_attempts              2
        normal_check_interval           720
        retry_interval                  720
        register                        0
}

# Check every 12hours with hard state after 3days
define service{
        name                            12hours_long
        use                             generic-service
        max_check_attempts              6
        normal_check_interval           720
        retry_interval                  720
        register                        0
}

# Check every weeks with immediate hard state
define service{
        name                            1week_short
        use                             generic-service
        max_check_attempts              1
        normal_check_interval           10080
        retry_interval                  10
        register                        0
}

# Check every weeks with hard state 1 week after first non-OK detection
define service{
        name                            1week_medium
        use                             generic-service
        max_check_attempts              2
        normal_check_interval           10080
        retry_interval                  10080
        register                        0
}

# Check every weeks with hard state after 4 weeks
define service{
        name                            1week_long
        use                             generic-service
        max_check_attempts              6
        normal_check_interval           10080
        retry_interval                  10080
        register                        0
}
# Generic service definition template - This is NOT a real service, just a template!
define service{
        name                            generic-service         ; The 'name' of this service template
        active_checks_enabled           1                       ; Active service checks are enabled
        passive_checks_enabled          1                       ; Passive service checks are enabled/accepted
        notifications_enabled           1                       ; Service notifications are enabled
        notification_interval           1440
        notification_period             24x7
        event_handler_enabled           0                       ; Service event handler is enabled
        flap_detection_enabled          1                       ; Flap detection is enabled
        process_perf_data               1                       ; Process performance data
        is_volatile                     0                       ; The service is not volatile
        check_period                    24x7                    ; The service can be checked at any time of the day
        max_check_attempts              3                       ; Re-check the service up to 3 times in order to determine its final (hard) state
        check_interval                  5                       ; Check the service every 5 minutes under normal conditions
        retry_interval                  2                       ; Re-check the service every two minutes until a hard state can be determined
        notification_options            w,u,c,r                 ; Send notifications about warning, unknown, critical, and recovery events
        contact_groups                  admins,users
        register                        0                       ; DONT REGISTER THIS DEFINITION - ITS NOT A REAL SERVICE, JUST A TEMPLATE
        }
