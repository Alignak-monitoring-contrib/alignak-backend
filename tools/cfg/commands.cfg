## Check a TCP port
# This plugin tests TCP connections with the specified host (or unix socket).
# check_tcp -H host -p port [-w <warning time>] [-c <critical time>] [-s <send
# string>] [-e <expect string>] [-q <quit string>][-m <maximum bytes>] [-d
# <delay>] [-t <timeout seconds>] [-r <refuse state>] [-M <mismatch state>]
# [-v] [-4|-6] [-j] [-D <warn days cert expire>[,<crit days cert expire>]] [-S
# <use SSL>] [-E]
define command {
    command_name    check_tcp
    command_line    $NAGIOSPLUGINSDIR$/check_tcp -H $HOSTADDRESS$ -p $ARG1$
}
define command {
    command_name        reload-shinken
    command_line        /etc/init.d/shinken reload
}

## Ask a NRPE agent with arguments (passing arguments may be a security risk)
## Requires that you have the NRPE daemon running on the remote host.
# check_nrpe -H <host> [-n] [-u] [-p <port>] [-t <timeout>] [-c <command>] [-a
# <arglist...>]
define command {
    command_name    check_nrpe_args
    command_line    $NAGIOSPLUGINSDIR$/check_nrpe -H $HOSTADDRESS$ -t 9 -u -c $ARG1$ -a $ARG2$ $ARG3$ $ARG4$ $ARG5$
}

# Compare time between target and shinken
# Doc : http://nagios.frank4dd.com/plugins/manual/check_snmp_time.htm
# Plugin : http://nagios.frank4dd.com/plugins/source/check_snmp_time.pl
define command {
    command_name    check_snmp_time
    command_line    $NAGIOSPLUGINSDIR$/check_snmp_time.pl -H $HOSTADDRESS$ -C $SNMPCOMMUNITYREAD$ -f -w $ARG1$ -c $ARG2$
}
## Notify Host by Email with detailled informations
# Service have appropriate macros. Look at unix-fs pack to get an example
define command {
    command_name    detailled-host-by-email
    command_line    $PLUGINSDIR$/notify_by_email.py -n host -S localhost -r $CONTACTEMAIL$ -f html -c "$NOTIFICATIONTYPE$,,$HOSTNAME$,,$HOSTADDRESS$,,$LONGDATETIME$"" -o ""$HOSTSTATE$,,$HOSTDURATION$" -d "$_HOSTDETAILLEDDESC$" -i "$_HOSTIMPACT$"
}
## Notify Host by Email
define command {
    command_name    notify-host-by-email
    command_line    $PLUGINSDIR$/notify_by_email.py -n host -S localhost -r $CONTACTEMAIL$ -f html -c "$NOTIFICATIONTYPE$,,$HOSTNAME$,,$HOSTADDRESS$,,$LONGDATETIME$" -o "$HOSTALIAS$,,$HOSTSTATE$,,$HOSTDURATION$"
}
## Notify Host by XMPP
define command {
    command_name    notify-host-by-xmpp
    command_line    $PLUGINSDIR$/notify_by_xmpp.py -a $PLUGINSDIR$/notify_by_xmpp.ini "Host '$HOSTNAME$' is $HOSTSTATE$ - Info : $HOSTOUTPUT$" $CONTACTEMAIL$
}
## Notify Service by SMS (through an Android phone)
# You need both reactionner_tag and module_type in most cases!
define command {
    command_name        notify-service-by-android-sms
    command_line        android_sms $CONTACTPAGER$ Service: $SERVICEDESC$\nHost: $HOSTNAME$\nAddress: $HOSTADDRESS$\nState: $SERVICESTATE$\nInfo: $OUTPUT$\nDate: $DATETIME$
    reactionner_tag     android_sms
    module_type         android_sms
}

## Notify Service by XMPP
define command {
    command_name    notify-service-by-xmpp
    command_line    $PLUGINSDIR$/notify_by_xmpp.py -a $PLUGINSDIR$/notify_by_xmpp.ini "$NOTIFICATIONTYPE$ $HOSTNAME$ $SERVICEDESC$ $SERVICESTATE$ $SERVICEOUTPUT$ $LONGDATETIME$" $CONTACTEMAIL$
}

## Check a DNS entry
## This plugin test the DNS service on the specified host using dig
# check_dig -l <query_address> [-H <host>] [-p <server port>] [-T <query type>]
# [-w <warning interval>] [-c <critical interval>] [-t <timeout>] [-a <expected
# answer address>] [-v]
define command {
    command_name    check_dig
    command_line    $NAGIOSPLUGINSDIR$/check_dig -H $HOSTADDRESS$ -l $ARG1$
}
define command {
    command_name    check_host_alive
    command_line    $NAGIOSPLUGINSDIR$/check_ping -H $HOSTADDRESS$ -w 1000,100% -c 3000,100% -p 1
}

## Ask a NRPE agent
## Requires that you have the NRPE daemon running on the remote host.
# check_nrpe -H <host> [-n] [-u] [-p <port>] [-t <timeout>] [-c <command>] [-a
# <arglist...>]
define command {
    command_name    check_nrpe
    command_line    $NAGIOSPLUGINSDIR$/check_nrpe -H $HOSTADDRESS$ -t 9 -u -c $ARG1$
}


## Check ping command
## Use ping to check connection statistics for a remote host.
# check_ping -H <host_address> -w <wrta>,<wpl>% -c <crta>,<cpl>% [-p packets]
# [-t timeout] [-4|-6]
define command {
    command_name    check_ping
    command_line    $NAGIOSPLUGINSDIR$/check_icmp -H $HOSTADDRESS$ -w 3000,100% -c 5000,100% -p 10
}


# Check SNMP service presence on target
define command {
    command_name   check_snmp_service
    command_line   $NAGIOSPLUGINSDIR$/check_snmp_service -H $HOSTADDRESS$ -C $SNMPCOMMUNITYREAD$
}


# default command to check storage by snmp
# Others commands are in os pack.
define command {
    command_name    check_snmp_storage
    command_line    $NAGIOSPLUGINSDIR$/check_snmp_storage.pl -H $HOSTADDRESS$ -C $SNMPCOMMUNITYREAD$ -m $ARG1$ -f -w $ARG2$ -c $ARG3$ -S0,1 -o 65535
}

define command {
    command_name        configuration-check
    command_line        sudo /etc/init.d/shinken check
}


## Notify Service by Email with detailled informations
# Service have appropriate macros. Look at unix-fs pack to get an example
define command {
    command_name    detailled-service-by-email
    command_line    $PLUGINSDIR$/notify_by_email.py -n service -S localhost -r $CONTACTEMAIL$ -f html -c "$NOTIFICATIONTYPE$,,$HOSTNAME$,,$HOSTADDRESS$,,$LONGDATETIME$" -o "$SERVICEDESC$,,$SERVICESTATE$,,$SERVICEOUTPUT$,,$SERVICEDURATION$" -d "$_SERVICEDETAILLEDESC$" -i "$_SERVICEIMPACT$" -a "$_SERVICEFIXACTIONS$"
}

## Notify Host by SMS (through an Android phone)
# You need both reactionner_tag and module_type in most cases!
define command {
    command_name        notify-host-by-android-sms
    command_line        android_sms $CONTACTPAGER$ Host: $HOSTNAME$\nAddress: $HOSTADDRESS$\nState: $HOSTSTATE$\nInfo: $OUTPUT$\nDate: $DATETIME$
    reactionner_tag     android_sms
    module_type         android_sms
}
## Notify Service by Email
define command {
    command_name    notify-service-by-email
    command_line    $PLUGINSDIR$/notify_by_email.py -n service -S localhost -r $CONTACTEMAIL$ -f html -c "$NOTIFICATIONTYPE$,,$HOSTNAME$,,$HOSTADDRESS$,,$LONGDATETIME$" -o "$SERVICEDESC$,,$SERVICESTATE$,,$SERVICEOUTPUT$,,$SERVICEDURATION$"
}

define command {
    command_name        restart-shinken
    command_line        /etc/init.d/shinken restart
}

